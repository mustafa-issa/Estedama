@using ChartsMix.Models
@using Highsoft.Web.Mvc.Charts
@model Pie3DModel
<div>
    @using (Html.BeginForm("Index", "Home"))
    {
        <div class="jarviswidget-editbox">
            <div class="widget-body">
                <div class="row">
                    <div class="col-md-6 form-group">
                        @Html.EnumDropDownListFor(m => m.period, "Period", new { @class = "form-control", @id = "ddlPie" })
                    </div>
                    <div class="col-md-6 form-group">
                        <section>
                            <label style="float : right;" class="inline-block checkbox"><input type="checkbox" checked="checked" name="defaultColors" id="chkPie"><i></i>Default Colors</label>
                        </section>
                    </div>
                </div>
                <div class="row" id="divDatePie" style="display : none">
                    <div class="col-md-6 form-group">
                        @Html.EditorFor(m => m.From)
                    </div>
                    <div class="col-md-6 form-group">
                        @Html.EditorFor(m => m.To)
                    </div>

                </div>

                <div class="tree smart-form">
                    <ul>
                        @Html.Raw(Helpers.FormTreeView(Model.TreeRoot, "pie"))
                    </ul>
                </div>
            </div>
            <input type="button" class="btn btn-default" value="Show Pie Chart" id="getChartPie" onclick="GetPieChart()" />
        </div>
    }
    <div class="widget-body">
        
        <div id="pieChart"></div>
    </div>
    <input id='color' type='color' style='display: none;' value='#ff0000' />

</div>


<script>

    function GetPieChart() {
        var model = {};
        model.Period = $('#ddlPie').val();
        model.From = dateFormat($('#PieModel_From').val());
        model.To = dateFormat($('#PieModel_To').val());
        model.Ids = [];
        var colors = [];
        if ($('#chkPie').is(":checked")) {
            $('input[name=pieIds]:checked').each(function () {
                model.Ids.push($(this).attr('value'));
            });
            colors = ['#7cb5ec', '#434348', '#90ed7d', '#f7a35c', '#8085e9', '#f15c80', '#e4d354', '#2b908f', '#f45b5b', '#91e8e1'];
        }
        else
        {
            $('input[name=pieIds]:checked').each(function () {
                model.Ids.push($(this).attr('value'));
                colors.push($(this).attr('color'));
            });
        }

        $.ajax({
            type: "GET",
            contentType: "application/json; charset=utf-8",
            url: '@Url.Action("GetPieChart", "Home")',
            data: model,
            dataType: "json",
            traditional: true,
            success: function (data) {
                var arr = [];
                var len = data.Data.length;
                for (var i = 0; i < len; i++) {
                    arr.push({
                        y: data.Data[i].Y,
                        name: data.Data[i].Name
                    });
                }
                DrawPieChart(arr, colors,data.MaxConsumption,data.MinConsumption,data.AverageConsumption);
            },
            error: function (err) {
                alert(err);
            }
        });
    }
    var max, min, avg;
    function DrawPieChart(arr, colors, max, min, avg) {
        max = max;
        min = min;
        avg = avg;
        Highcharts.chart('pieChart', {
            exporting: {
                fallbackToExportServer: false,
                allowHTML: true
            },
            credits: {
                enabled : false,
                text: "ChartsMix.com",
                href: "http://www.chartsmix.com"
            },
            colors: colors,
            chart: {
                spacingBottom: 50,
                spacingTop: 0,
                spacingLeft: 10,
                spacingRight: 10,
                type: 'pie',
                options3d: {
                    enabled: true,
                    alpha: 45
                }
            },
            title: {
                text: 'Pie Chart Breakdown'
            },
            tooltip: {
                pointFormat: '{series.name}: <b>{point.percentage:.1f}% = {point.y}</b>'
                
            },
            plotOptions: {
                
                pie: {
                    allowPointSelect: true,
                    cursor: 'pointer',
                    depth: 35,
                    dataLabels: {
                        enabled: true,
                        format: '{point.name}'
                    },
                    innerSize: 100,
                    depth: 45
                }
            },
            
            series: [{
                name: 'Meters',
                type: 'pie',
                data: arr
            }]
        }, function (chart) {

            chart.renderer.html('<style>table {width : 100%; border-collapse : collapse;} td, th {font-family : "Lucida Grande", "Lucida Sans Unicode", Arial, Helvetica, sans-serif; white-space : nowrap; font-size : 12px; padding: 8px 10px;border-top : 1px solid #ddd;}</style><table id="pieTable" class="table table-hover"> <tr><th>Maximum</th><th>Minimum</th><th>Average</th></tr><tr><td>' + max + '</td><td>' + min + '</td><td>' + avg + '</td></tr></table>'
                , 10, $('#pieChart').height() - 50)
                .add();
            $('#pieTable').parent().css({ "width": "100%" });
        });
    }
</script>