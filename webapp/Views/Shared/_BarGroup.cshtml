@using ChartsMix.Models
@using Highsoft.Web.Mvc.Charts
@model PieGroupModel
<div>
    @using (Html.BeginForm("Index", "Home", FormMethod.Post))
    {
        <div class="jarviswidget-editbox">
            <div class="widget-body">
                <div class="row">
                    <div class="col-md-6 form-group">
                        @Html.EnumDropDownListFor(m => m.period, "Period", new { @class = "form-control", @id = "ddlBarGroup" })
                    </div>
                </div>
                <div class="row" id="divDateBarGroup" style="display : none">
                    <div class="col-md-6 form-group">
                        @Html.EditorFor(m => m.From)
                    </div>
                    <div class="col-md-6 form-group">
                        @Html.EditorFor(m => m.To)
                    </div>
                </div>
                <div class="form-group">
                    <label>Meter groups</label>

                    <ul id="barGroupTabView" class="nav nav-tabs bordered">
                        <li class="active">
                            <a href="#bar1" id="bar1toggle" data-toggle="tab">Select Groups </a>
                        </li>
                        <li>
                            <a href="#bar2" data-toggle="tab"><i class="fa fa-fw fa-lg fa-gear"></i> Create new group</a>
                        </li>

                    </ul>
                    @Html.Partial("_BarChartGroups", Model.Group, new ViewDataDictionary { TemplateInfo = new TemplateInfo { HtmlFieldPrefix = "BarGroupModel" } })

                </div>
            </div>
            <input type="button" class="btn btn-default" value="Show Groups Chart" id="getGroupChart" onclick="GetBarGroupChart()" />
        </div>
    }
    <div class="widget-body">
        <div id="BarGroupChart"></div>
    </div>
</div>
<script>
    function GetBarGroupChart() {
        var model = {};
        model.Period = $('#ddlBarGroup').val();
        model.From = dateFormat($('#barGroupChartModel_From').val());
        model.To = dateFormat($('#barGroupChartModel_To').val());
        model.Ids = $('#ddlBarGroups').val();

        $.ajax({
            type: "GET",
            contentType: "application/json; charset=utf-8",
            url: '@Url.Action("GetGroupChart", "Home")',
            data: model,
            dataType: "json",
            traditional: true,
            success: function (data) {
                var drillDowns = [];
                var len = data.length;
                for (var i = 0; i < len; i++) {
                    drillDowns.push({
                        data: data[i].subGroups,
                        name: data[i].name,
                        id: data[i].name
                    });
                }
                DrawBarGroupChart(data, drillDowns);
            },
            error: function (data) {
                alert("Failed");
            }
        });
    }

    function DrawBarGroupChart(data, arr) {
        Highcharts.chart('BarGroupChart', {
            chart: {
                type: 'column'
            },
            title: {
                text: 'Groups Breakdown'
            },
            subtitle: {
                text: ''
            },
            xAxis: {
                type: 'category'
            },
            yAxis: {
                title: {
                    text: 'Total percent Consumption'
                }
            },
            legend: {
                enabled: false
            },
            plotOptions: {
                series: {
                    borderWidth: 0,
                    dataLabels: {
                        enabled: true,
                        format: '{point.y:.1f}%'
                    }
                }
            },

            tooltip: {
                headerFormat: '<span style="font-size:11px">{series.name}</span><br>',
                pointFormat: '<span style="color:{point.color}">{point.name}</span>: <b>{point.y:.2f}%</b> of total<br/>'
            },

            series: [{
                name: 'Meters',
                colorByPoint: true,
                data: data
            }],
            drilldown: {
                series: arr
            }
        });
    }

</script>